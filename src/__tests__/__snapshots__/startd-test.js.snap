// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`startd should correctly generate a webpack config from an input path 1`] = `
Array [
  Object {
    "entry": Array [
      "@babel/polyfill",
      "/TEST_DIRNAME/server.js",
    ],
    "mode": "development",
    "module": Object {
      "rules": Array [
        Object {
          "exclude": /node_modules/,
          "loader": "babel-loader",
          "options": Object {
            "presets": Array [
              "@babel/preset-react",
            ],
          },
          "test": /\\\\\\.\\(js\\|jsx\\|ts\\|tsx\\)\\$/,
        },
      ],
    },
    "name": "server",
    "node": Object {
      "__dirname": true,
    },
    "output": Object {
      "filename": "server.bundle.js",
      "libraryTarget": "commonjs2",
      "path": "/TEST_DIRNAME",
    },
    "plugins": Array [
      IgnorePlugin {
        "checkIgnore": [Function],
        "options": Object {
          "contextRegExp": /\\\\/pg\\\\//,
          "resourceRegExp": /pg-native/,
        },
      },
      DefinePlugin {
        "definitions": Object {
          "APP_PATH": "\\"TEST_APP\\"",
          "BUNDLE_PATH": "\\"app.bundle.js\\"",
          "DEV_PORT": "8080",
          "PORT": 3000,
          "USE_APP_PROXY": false,
        },
      },
    ],
    "resolve": Object {
      "extensions": Array [
        "*",
        ".mjs",
        ".js",
        ".jsx",
        ".tsx",
        ".ts",
      ],
    },
    "target": "node",
  },
  Object {
    "entry": Array [
      "@babel/polyfill",
      "/TEST_DIRNAME/client.js",
    ],
    "mode": "development",
    "module": Object {
      "rules": Array [
        Object {
          "exclude": /node_modules/,
          "loader": "babel-loader",
          "options": Object {
            "presets": Array [
              "@babel/preset-react",
            ],
          },
          "test": /\\\\\\.\\(js\\|jsx\\|ts\\|tsx\\)\\$/,
        },
      ],
    },
    "name": "client",
    "output": Object {
      "filename": "app.bundle.js",
      "path": "/TEST_DIRNAME/public",
    },
    "plugins": Array [
      IgnorePlugin {
        "checkIgnore": [Function],
        "options": Object {
          "contextRegExp": /\\\\/pg\\\\//,
          "resourceRegExp": /pg-native/,
        },
      },
      DefinePlugin {
        "definitions": Object {
          "APP_PATH": "\\"TEST_APP\\"",
          "BUNDLE_PATH": "\\"app.bundle.js\\"",
          "DEV_PORT": "8080",
          "PORT": 3000,
          "USE_APP_PROXY": false,
        },
      },
    ],
    "resolve": Object {
      "extensions": Array [
        "*",
        ".mjs",
        ".js",
        ".jsx",
        ".tsx",
        ".ts",
      ],
    },
  },
]
`;

exports[`startd should correctly generate a webpack config from an input path 2`] = `
Array [
  Object {
    "entry": Array [
      "@babel/polyfill",
      "/TEST_DIRNAME/server.js",
    ],
    "mode": "development",
    "module": Object {
      "rules": Array [
        Object {
          "exclude": /node_modules/,
          "loader": "babel-loader",
          "options": Object {
            "presets": Array [
              "@babel/preset-react",
            ],
          },
          "test": /\\\\\\.\\(js\\|jsx\\|ts\\|tsx\\)\\$/,
        },
      ],
    },
    "name": "server",
    "node": Object {
      "__dirname": true,
    },
    "output": Object {
      "filename": "server.bundle.js",
      "libraryTarget": "commonjs2",
      "path": "/TEST_DIRNAME",
    },
    "plugins": Array [
      IgnorePlugin {
        "checkIgnore": [Function],
        "options": Object {
          "contextRegExp": /\\\\/pg\\\\//,
          "resourceRegExp": /pg-native/,
        },
      },
      DefinePlugin {
        "definitions": Object {
          "APP_PATH": "\\"TEST_APP\\"",
          "BUNDLE_PATH": "\\"app.bundle.js\\"",
          "DEV_PORT": "8080",
          "MIDDLEWARE_PATH": "\\"TEST_MIDDLEWARE\\"",
          "PORT": 3000,
          "USE_APP_PROXY": false,
        },
      },
    ],
    "resolve": Object {
      "extensions": Array [
        "*",
        ".mjs",
        ".js",
        ".jsx",
        ".tsx",
        ".ts",
      ],
    },
    "target": "node",
  },
  Object {
    "entry": Array [
      "@babel/polyfill",
      "/TEST_DIRNAME/client.js",
    ],
    "mode": "development",
    "module": Object {
      "rules": Array [
        Object {
          "exclude": /node_modules/,
          "loader": "babel-loader",
          "options": Object {
            "presets": Array [
              "@babel/preset-react",
            ],
          },
          "test": /\\\\\\.\\(js\\|jsx\\|ts\\|tsx\\)\\$/,
        },
      ],
    },
    "name": "client",
    "output": Object {
      "filename": "app.bundle.js",
      "path": "/TEST_DIRNAME/public",
    },
    "plugins": Array [
      IgnorePlugin {
        "checkIgnore": [Function],
        "options": Object {
          "contextRegExp": /\\\\/pg\\\\//,
          "resourceRegExp": /pg-native/,
        },
      },
      DefinePlugin {
        "definitions": Object {
          "APP_PATH": "\\"TEST_APP\\"",
          "BUNDLE_PATH": "\\"app.bundle.js\\"",
          "DEV_PORT": "8080",
          "MIDDLEWARE_PATH": "\\"TEST_MIDDLEWARE\\"",
          "PORT": 3000,
          "USE_APP_PROXY": false,
        },
      },
    ],
    "resolve": Object {
      "extensions": Array [
        "*",
        ".mjs",
        ".js",
        ".jsx",
        ".tsx",
        ".ts",
      ],
    },
  },
]
`;
